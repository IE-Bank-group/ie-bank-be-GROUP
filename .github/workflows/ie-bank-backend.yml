name: ie-bank-backend

on:
  push:
    branches:
      - 'annachange'  # Trigger for this branch
  pull_request:
    branches:
      - 'main'  # Trigger on pull requests to the main branch
  workflow_dispatch:  # Manual trigger

permissions:
  contents: read
  id-token: write

env:
  BACKEND_WEBAPP_DEV: apayne-be-dev
  BACKEND_WEBAPP_UAT: apayne-be-uat
  BACKEND_WEBAPP_PROD: apayne-be-prod
  DEV_KV: apayne-kv-dev
  UAT_KV: apayne-kv-uat
  PROD_KV: apayne-kv-prod

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENV: ghci

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8 pytest
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          python -m pytest --cov=iebank_api -v
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: .

  deploy-dev:
    if: success()  # Only runs if the build job is successful
    runs-on: ubuntu-latest
    needs: build  # Ensures the build job runs first
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      # Fetching secrets (username and password) from Key Vault for DEV
      - name: Fetch secrets from Key Vault (DEV)
        run: |
          DEV_DB_USERNAME=$(az keyvault secret show --vault-name ${{env.DEV_KV}} --name keyVaultSecretNameAdminUsername --query value -o tsv)
          DEV_DB_PASSWORD0=$(az keyvault secret show --vault-name ${{env.DEV_KV}} --name keyVaultSecretNameAdminPassword0 --query value -o tsv)
          DEV_DB_PASSWORD1=$(az keyvault secret show --vault-name ${{env.DEV_KV}} --name keyVaultSecretNameAdminPassword1 --query value -o tsv)
          echo "DEV_DB_USERNAME=${DEV_DB_USERNAME}" >> $GITHUB_ENV
          echo "DEV_DB_PASSWORD0=${DEV_DB_PASSWORD0}" >> $GITHUB_ENV
          echo "DEV_DB_PASSWORD1=${DEV_DB_PASSWORD1}" >> $GITHUB_ENV

      - name: 'Deploy to Azure Web App Development'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: apayne-be-dev
          package: .

  deploy-uat:
    if: success()  # Only runs if deploy-dev is successful
    runs-on: ubuntu-latest
    needs: deploy-dev  # Ensures deploy-dev runs first
    environment:
      name: 'UAT'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      # Fetching secrets (username and password) from Key Vault for UAT
      - name: Fetch secrets from Key Vault (UAT)
        run: |
          UAT_DB_USERNAME=$(az keyvault secret show --vault-name ${{env.UAT_KV}} --name keyVaultSecretNameAdminUsername --query value -o tsv)
          UAT_DB_PASSWORD0=$(az keyvault secret show --vault-name ${{env.UAT_KV}} --name keyVaultSecretNameAdminPassword0 --query value -o tsv)
          UAT_DB_PASSWORD1=$(az keyvault secret show --vault-name ${{env.UAT_KV}} --name keyVaultSecretNameAdminPassword1 --query value -o tsv)
          echo "UAT_DB_USERNAME=${UAT_DB_USERNAME}" >> $GITHUB_ENV
          echo "UAT_DB_PASSWORD0=${UAT_DB_PASSWORD0}" >> $GITHUB_ENV
          echo "UAT_DB_PASSWORD1=${UAT_DB_PASSWORD1}" >> $GITHUB_ENV

      - name: 'Deploy to Azure Web App UAT'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: apayne-be-uat
          package: .

  deploy-prod:
    if: success()  # Only runs if deploy-uat is successful
    runs-on: ubuntu-latest
    needs: deploy-uat  # Ensures deploy-uat runs first
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  
    steps:
      # Download artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .
  
      # Login to Azure using the service principal
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      # Debug: Verify if the login was successful
      - name: Azure login check
        run: |
          az account show
          az keyvault list --query '[].name'
  
      # Fetch secrets (username and password) from Key Vault for PROD
      - name: Fetch secrets from Key Vault (PROD)
        run: |
          echo "Fetching secrets from Key Vault..."
          
          # Debugging: Verify if the Key Vault is accessible
          az keyvault show --name ${{env.PROD_KV}}
  
          # Fetch the secrets
          PROD_DB_USERNAME=$(az keyvault secret show --vault-name ${{env.PROD_KV}} --name keyVaultSecretNameAdminUsername --query value -o tsv)
          PROD_DB_PASSWORD0=$(az keyvault secret show --vault-name ${{env.PROD_KV}} --name keyVaultSecretNameAdminPassword0 --query value -o tsv)
          PROD_DB_PASSWORD1=$(az keyvault secret show --vault-name ${{env.PROD_KV}} --name keyVaultSecretNameAdminPassword1 --query value -o tsv)
  
          # Debugging: Print fetched secrets (for debugging only; avoid printing sensitive data in production)
          echo "Fetched PROD DB username: ${PROD_DB_USERNAME}"
          echo "Fetched PROD DB password0: ${PROD_DB_PASSWORD0}"
  
          # Export secrets to environment variables
          echo "PROD_DB_USERNAME=${PROD_DB_USERNAME}" >> $GITHUB_ENV
          echo "PROD_DB_PASSWORD0=${PROD_DB_PASSWORD0}" >> $GITHUB_ENV
          echo "PROD_DB_PASSWORD1=${PROD_DB_PASSWORD1}" >> $GITHUB_ENV
  
      # Deploy to Azure Web App Production
      - name: Deploy to Azure Web App Production
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: apayne-be-prod
          package: .
  
  
  
